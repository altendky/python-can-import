Installing pycanlib
===================

This document assumes a workstation set up for development using Mercurial
(i.e. Mercurial installed and set up correctly, with an SSH key for the user
doing the install). Python 2.6 or later must be installed as well.

1. Install Kvaser CANLIB SDK
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Windows XP
``````````

Copy \\nz2ks32ch\Public\Install\Kvaser\CANLib\Version42\canlib.exe to your
machine, execute it and follow the on-screen instructions to install the SDK.

Linux
`````

NOTE: The Kvaser driver for the Leaf and USBCAN II doesn't work under Linux
kernel versions earlier than 2.6.

1. Make sure your system is set up for kernel compilation (i.e. has header
   packages installed).
2. Extract \\nz2ks32ch\Public\Install\Kvaser\Drivers\Linux\linuxcan_beta.tar.gz
   to your machine and extract it.
3. Correct the install scripts for USBCAN II and Leaf devices by changing line
   17 of ``installscript_leaf_2.6.sh`` and ``installscript_usbcanII_2.6.sh``
   from ``$UDEVCTRL reload_rules`` to ``$UDEVCTRL --reload-rules``
4. Do ``sudo make install`` to build and install the drivers.

2. Install Python setuptools
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Windows XP
``````````

Copy \\nz2ks32ch\Public\Install\Python\2.6.4\setuptools-0.6c11.win32-py2.6.exe
to your machine, execute it and follow the on-screen instructions to install
Python's setuptools package.

Linux
`````

Do ``sudo aptitude install python-setuptools`` to install setuptools.

3. Install hgversionutils
~~~~~~~~~~~~~~~~~~~~~~~~~

Windows XP
``````````

1. Do ``hg clone ssh://hg.sw/user/bpowell/hgversionutils`` to clone the
   hgversionutils source to your machine.
2. Do ``python setup.py install`` to install this package (the cloned
   repository may be deleted after the package is installed).

Linux
`````

1. Do ``hg clone ssh://hg.sw/user/bpowell/hgversionutils`` to clone the
   hgversionutils source to your machine.
2. Do ``sudo python2.6 setup.py install`` to install this package (the cloned
   repository may be deleted after the package is installed).

3. Install pycanlib
~~~~~~~~~~~~~~~~~~~~

Windows XP
``````````

1. Do ``hg clone ssh://hg.sw/user/bpowell/pycanlib`` to clone the pycanlib
   source to your machine.
2. Do ``python setup.py develop`` to do a "development" install of this package
   to your machine (this allows you to pull later updates of the pycanlib
   source from the Mercurial repo and use them without having to reinstall
   pycanlib). Note that the cloned repo should *not* be deleted after this step!

Linux
`````

1. Do ``hg clone ssh://hg.sw/user/bpowell/pycanlib`` to clone the pycanlib
   source to your machine.
2. Do ``sudo python2.6 setup.py develop`` to do a "development" install of this
   package to your machine (this allows you to pull later updates of the
   pycanlib source from the Mercurial repo and use them without having to
   reinstall pycanlib). Note that the cloned repo should *not* be deleted after
   this step!

4. (OPTIONAL) Install IPython
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

IPython is an extended command interpreter for Python, offering syntax
colouring and tab-completion, among many other features. The pycanlib package
includes some utilities that can be used to manipulate CAN traffic streams
using the ipython interface.

Windows XP
``````````

1. Copy \\nz2ks32ch\Public\Install\Python\ipython-0.10.win32-setup.exe to your
   machine, execute it, and follow the on-screen instructions to install
   IPython.
2. To check that the install worked, enter ``ipython -p pycanlib`` on the
   command line. You should see something like the following::

    Importing ipipe library...
    Importing pycanlib IPython extensions...
            ReadCAN...
            WriteCAN...
            PrintCAN...
            ReadLog...
            WriteLog...
            AcceptanceFilter...
            ExtractTimeslice...

Linux
`````

1. Do ``sudo aptitude install ipython`` to install IPython.
2. To check that the install worked, enter ``ipython -p pycanlib`` on the
   command line. You should see something like the following::

    Importing ipipe library...
    Importing pycanlib IPython extensions...
            ReadCAN...
            WriteCAN...
            PrintCAN...
            ReadLog...
            WriteLog...
            AcceptanceFilter...
            ExtractTimeslice...
