.. include: <isogrk1.txt>

.. ..::
    GNU Free Documentation License

    Version 1.3, 3 November 2008

    Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. <http://fsf.org/>

    Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.
    0. PREAMBLE

    The purpose of this License is to make a manual, textbook, or other functional and useful document "free" in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others.

    This License is a kind of "copyleft", which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software.

    We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference.
    1. APPLICABILITY AND DEFINITIONS

    This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The "Document", below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as "you". You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law.

    A "Modified Version" of the Document means any work containing the Document or a portion of it, either copied verbatim, or with modifications and/or translated into another language.

    A "Secondary Section" is a named appendix or a front-matter section of the Document that deals exclusively with the relationship of the publishers or authors of the Document to the Document's overall subject (or to related matters) and contains nothing that could fall directly within that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary Section may not explain any mathematics.) The relationship could be a matter of historical connection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position regarding them.

    The "Invariant Sections" are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none.

    The "Cover Texts" are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words.

    A "Transparent" copy of the Document means a machine-readable copy, represented in a format whose specification is available to the general public, that is suitable for revising the document straightforwardly with generic text editors or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing editor, and that is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input to text formatters. A copy made in an otherwise Transparent file format whose markup, or absence of markup, has been arranged to thwart or discourage subsequent modification by readers is not Transparent. An image format is not Transparent if used for any substantial amount of text. A copy that is not "Transparent" is called "Opaque".

    Examples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available DTD, and standard-conforming simple HTML, PostScript or PDF designed for human modification. Examples of transparent image formats include PNG, XCF and JPG. Opaque formats include proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which the DTD and/or processing tools are not generally available, and the machine-generated HTML, PostScript or PDF produced by some word processors for output purposes only.

    The "Title Page" means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, "Title Page" means the text near the most prominent appearance of the work's title, preceding the beginning of the body of the text.

    The "publisher" means any person or entity that distributes copies of the Document to the public.

    A section "Entitled XYZ" means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as "Acknowledgements", "Dedications", "Endorsements", or "History".) To "Preserve the Title" of such a section when you modify the Document means that it remains a section "Entitled XYZ" according to this definition.

    The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License.
    2. VERBATIM COPYING

    You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3.

    You may also lend copies, under the same conditions stated above, and you may publicly display copies.
    3. COPYING IN QUANTITY

    If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document's license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects.

    If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages.

    If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public.

    It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.
    4. MODIFICATIONS

    You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version:

        * A. Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission.
        * B. List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement.
        * C. State on the Title page the name of the publisher of the Modified Version, as the publisher.
        * D. Preserve all the copyright notices of the Document.
        * E. Add an appropriate copyright notice for your modifications adjacent to the other copyright notices.
        * F. Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below.
        * G. Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document's license notice.
        * H. Include an unaltered copy of this License.
        * I. Preserve the section Entitled "History", Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled "History" in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence.
        * J. Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the "History" section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission.
        * K. For any section Entitled "Acknowledgements" or "Dedications", Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein.
        * L. Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles.
        * M. Delete any section Entitled "Endorsements". Such a section may not be included in the Modified Version.
        * N. Do not retitle any existing section to be Entitled "Endorsements" or to conflict in title with any Invariant Section.
        * O. Preserve any Warranty Disclaimers.

    If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version's license notice. These titles must be distinct from any other section titles.

    You may add a section Entitled "Endorsements", provided it contains nothing but endorsements of your Modified Version by various partiesfor example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard.

    You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one.

    The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version.
    5. COMBINING DOCUMENTS

    You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers.

    The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work.

    In the combination, you must combine any sections Entitled "History" in the various original documents, forming one section Entitled "History"; likewise combine any sections Entitled "Acknowledgements", and any sections Entitled "Dedications". You must delete all sections Entitled "Endorsements".
    6. COLLECTIONS OF DOCUMENTS

    You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects.

    You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document.
    7. AGGREGATION WITH INDEPENDENT WORKS

    A compilation of the Document or its derivatives with other separate and independent documents or works, in or on a volume of a storage or distribution medium, is called an "aggregate" if the copyright resulting from the compilation is not used to limit the legal rights of the compilation's users beyond what the individual works permit. When the Document is included in an aggregate, this License does not apply to the other works in the aggregate which are not themselves derivative works of the Document.

    If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document's Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.
    8. TRANSLATION

    Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail.

    If a section in the Document is Entitled "Acknowledgements", "Dedications", or "History", the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.
    9. TERMINATION

    You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License.

    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.

    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.

    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it.
    10. FUTURE REVISIONS OF THIS LICENSE

    The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See http://www.gnu.org/copyleft/.

    Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License "or any later version" applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Document.
    11. RELICENSING

    "Massive Multiauthor Collaboration Site" (or "MMC Site") means any World Wide Web server that publishes copyrightable works and also provides prominent facilities for anybody to edit those works. A public wiki that anybody can edit is an example of such a server. A "Massive Multiauthor Collaboration" (or "MMC") contained in the site means any set of copyrightable works thus published on the MMC site.

    "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license published by Creative Commons Corporation, a not-for-profit corporation with a principal place of business in San Francisco, California, as well as future copyleft versions of that license published by that same organization.

    "Incorporate" means to publish or republish a Document, in whole or in part, as part of another Document.

    An MMC is "eligible for relicensing" if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008.

    The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing.

==================================================
Software Requirements Specification - ``pycanlib``
==================================================

This document outlines the software requirements for ``pycanlib``, a wrapper for the Kvaser CANLIB SDK written in Python.

-------------------
CAN Message Objects
-------------------

REQ-ShallCreateCANMessageObject
-------------------------------

The ``pycanlib`` module shall allow the creation of a Python object representing a CAN message, which consists of a timestamp, an arbitration ID, a DLC value (which defines the number of data bytes in the message), an array of data bytes, and flags indicating the arbitration ID length (11-bit or 29-bit), the frame type (data or remote, wakeup or non-wakeup, error or non-error). All of these parameters shall have default values, so that it is possible to create a CAN message without specifying any of them.

``[UnitTest]``

REQ-ShallNotAcceptInvalidTimestamps
-----------------------------------

If a timestamp value is passed to the ``pycanlib`` information message or CAN message constructors that is not a floating point number or is negative, the constructor shall raise an exception containing the invalid timestamp, and the message shall not be created. Otherwise, a valid message object shall be created.

``[UnitTest]``

REQ-ShallNotAcceptInvalidArbitrationIDs
---------------------------------------

CAN arbitration IDs are ll bits in length for standard messages and 29 bits in length for extended messages. If an arbitration ID parameter is passed during initialisation of a CAN message object that is not an integer or is greater than 2\ :sup:`11` - 1 for a standard message or 2\ :sup:`29` - 1 for an extended message, ``pycanlib`` shall raise an exception containing the invalid arbitration ID, and the message object shall not be created.

``[UnitTest]``

REQ-ShallNotAcceptInvalidPayload
--------------------------------

A CAN message's payload (i.e. the data array) consists of between zero and eight 8-bit integers. If a data parameter is passed during initialisation of a CAN message object which contains more than 8 items, or in which any item is not an integer, or in which any item has a value not in the range 0 to 2\ :sup:`8` - 1, ``pycanlib`` shall raise an exception containing the invalid payload, and the message shall not be created.

``[UnitTest]``

REQ-ShallNotAcceptInvalidDLC
----------------------------

A valid CAN message data length code (DLC) value is between zero and eight. If a DLC parameter is passed during initialisation of a CAN message object which is not an integer, or is not in this range, ``pycanlib`` shall raise an exception containing the invalid DLC, and the message shall not be created.

``[UnitTest]``

REQ-MessageShallNotAcceptInvalidFlags
-------------------------------------

A valid CAN message flags word consists of any combination of the flags defined in the documentation for the CANLIB SDK, represented as a 16-bit integer. If a flags parameter is passed during initialisation of a CAN message which is not an integer, or sets flags that are not defined by the CANLIB SDK documentation, ``pycanlib`` shall raise an exception containing the invalid flags value, and the message shall not be created.

``[UnitTest]``

REQ-ShallProvideStringRepresentationOfCANMessage
------------------------------------------------

The ``pycanlib`` module shall allow the creation of string representations of
CAN message objects in the format defined below, with each field delimited by a
single tab character.

+---------------------------------------------------------------------+
|Field content                                                        |
+=====================================================================+
|Message timestamp (in seconds, to 6 decimal places)                  |
+---------------------------------------------------------------------+
|Message source ID (in hexadecimal format - zero padded)              |
+---------------------------------------------------------------------+
|Message flags word (in hexadecimal format - zero padded)             |
+---------------------------------------------------------------------+
|Message DLC (in decimal format)                                      |
+---------------------------------------------------------------------+
|Message data (0 - 8 bytes in hexadecimal format - zero padded, space |
|delimited)                                                           |
+---------------------------------------------------------------------+
|Information string text (if included)                                |
+---------------------------------------------------------------------+

``[UnitTest]``

REQ-ShallAllowMessageComparison
-------------------------------

The ``pycanlib`` module shall allow comparison of any or all fields of any CAN message object (see REQ-ShallCreateCANMessageObject_) with any other CAN message object. If the object being compared against the CAN message is not a valid CAN message object, ``pycanlib`` shall raise an exception containing the invalid object.

``[UnitTest]``

-----------
Bus Objects
-----------

REQ-ShallCreateBusObject
------------------------

The ``pycanlib`` module shall allow creation of objects representing connections to a CAN bus using the Kvaser CANLIB SDK.

``[UnitTest]``

REQ-ShallAcceptOnlyLegalChannelNumbers
--------------------------------------

Legal channel numbers shall be integers in the range 0 to n-1 where n is the number of channels available on the system ``pycanlib`` is running on. If, during the opening of a CAN bus channel, a channel number is passed that is not an integer or is outside this range, ``pycanlib`` shall raise an exception containing the channel number, the channel shall not be opened, and the bus object shall not be created. Otherwise, provided that the other bus parameters have legal values, ``pycanlib`` shall create a bus object using the parameters passed.

``[UnitTest]``

REQ-ShallAcceptOnlyLegalBusSpeeds
---------------------------------

Legal CAN bus speeds shall be integers in the range 0 to 1000000. If, during the opening of a CAN bus channel, a bus speed is passed that is not an integer or is not in the legal range, ``pycanlib`` shall raise an exception containing the invalid speed value, the channel shall not be opened, and the bus object shall not be created.

``[UnitTest]``

REQ-BusShallNotAcceptInvalidFlags
---------------------------------

Legal CAN bus flags values are integers in the range 0 to 2\ :sup:`16` - 1. If, during the opening of a CAN bus channel, a bus speed is passed that is not an integer or is not in this range, ``pycanlib`` shall raise an exception containing the invalid flags value, the channel shall not be opened, and the bus object shall not be created.

REQ-ShallAcceptOnlyLegalSegmentLengths
--------------------------------------

Legal CAN bus segment lengths shall be integers in the range 0 to 255. If, during the opening of a CAN bus channel, a value is passed for either or both of t\ :sub:`seg1` or t\ :sub:`seg2` that is not an integer or is not in the legal range, ``pycanlib`` shall raise an exception containing the invalid segment length, the channel shall not be opened, and the bus object shall not be created.

``[UnitTest]``

REQ-ShallAcceptOnlyLegalSyncJumpWidths
--------------------------------------

Legal CAN bus synchronisation jump width (SJW) values shall be integers in the range 1 to 4. If, during the opening of a CAN bus channel, an SJW value is passed that is not an integer or is not in the legal range, ``pycanlib`` shall raise an exception containing the invalid SJW value, the channel shall not be opened, and the bus object shall not be created.

``[UnitTest]``

REQ-ShallAcceptOnlyLegalSamplingPoints
--------------------------------------

Legal numbers of sampling points shall be either 1 or 3. If, during the opening of a CAN bus channel, a number of sampling points is passed that is is not one of these values, ``pycanlib`` shall raise an exception containing the invalid number of sampling points, the channel shall not be opened, and the bus object shall not be created.

``[UnitTest]``

REQ-ShallAllowWritingToBus
--------------------------

The ``pycanlib`` module shall allow the writing of a created CAN message object (see REQ-ShallCreateCANMessageObject_) to a created CAN bus (see REQ-ShallCreateBusObject_). Writing of objects that are not valid CAN message objects shall cause an exception containing the invalid message to be raised, and the invalid message shall not be sent.

``[UnitTest]``

REQ-ShallAllowReadingFromBus
----------------------------

The ``pycanlib`` module shall allow reading of messages received by a CAN bus object. The messages read shall be represented as instances of the message object defined by ``pycanlib`` (see REQ-ShallCreateCANMessageObject_).

``[UnitTest]``

REQ-MessagesShallBeReadInOrder
------------------------------

The ``pycanlib`` module shall provide messages read from the CAN bus in the order they were received.

``[UnitTest]``

REQ-MessagesShallBeWrittenInOrder
---------------------------------

The ``pycanlib`` module shall write messages to the CAN bus in the order they are provided to it.

``[UnitTest]``

REQ-ShallAllowReadingOfCANChannelInfo
-------------------------------------

The ``pycanlib`` module shall allow reading of all CAN channel information, as defined in the CANLIB SDK documentation for ``canGetChannelData``. If the channel requested is not within the range of channels provided by the system or is not an integer, ``pycanlib`` shall raise an exception indicating this and containing the invalid channel number. Otherwise, ``pycanlib`` shall return an object containing the CAN channel information, as defined above.

``[UnitTest]``

REQ-ShallAllowReadingOfCANBusTimer
----------------------------------

The ``pycanlib`` module shall allow reading of the time elapsed since the CAN channel was opened, as recorded by the CAN hardware's bus timer.

``[UnitTest]``

REQ-ShallAllowReadingOfCANBusStatistics
---------------------------------------

The ``pycanlib`` module shall allow reading of all CAN channel statistics, as defined in the CANLIB SDK documentation for ``canGetBusStatistics``.

``[UnitTest]``
